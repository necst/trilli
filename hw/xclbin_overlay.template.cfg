# MIT License

# Copyright (c) 2025 Giuseppe Sorrentino, Paolo Salvatore Galfano, Davide Conficconi, Eleonora D'Arnese

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

[connectivity]
nk = setup_aie:1:setup_aie_0
nk = fetcher_A:1:fetcher_A_0
nk = fetcher_B:1:fetcher_B_0
nk = fetcher_C:1:fetcher_C_0
nk = fetcher_D:1:fetcher_D_0
nk = setup_interpolator:1:setup_interpolator_0
nk = setup_interpolator:1:setup_interpolator_1
nk = mutual_information_master:1:mutual_information_master_0
nk = setup_mi:1:setup_mi_0

slr = setup_interpolator_0:SLR0
slr = setup_interpolator_1:SLR0
slr = mutual_information_master_0:SLR0
slr = setup_mi_0:SLR0

slr = mutual_information_master_0:SLR0
slr = setup_aie_0:SLR0
slr = fetcher_A_0:SLR0
slr = fetcher_B_0:SLR0
slr = fetcher_C_0:SLR0
slr = fetcher_D_0:SLR0

sp = mutual_information_master_0.m_axi_gmem2:MC_NOC0
sp = fetcher_A_0.m_axi_gmemA:MC_NOC0
sp = fetcher_B_0.m_axi_gmemB:MC_NOC0
sp = fetcher_C_0.m_axi_gmemC:MC_NOC0
sp = fetcher_D_0.m_axi_gmemD:MC_NOC0


#### STREAM_CONNECT ####

# *** setup_aie ***
stream_connect = setup_aie_0.s:ai_engine_0.params

# *** ai_engine_0 ***
stream_connect = ai_engine_0.TL:fetcher_A_0.coords_in
stream_connect = ai_engine_0.TR:fetcher_B_0.coords_in
stream_connect = ai_engine_0.BL:fetcher_C_0.coords_in
stream_connect = ai_engine_0.BR:fetcher_D_0.coords_in

# *** other ai engines ***
${AIE_TO_WRITER}

# *** setup_interpolator ***
stream_connect = fetcher_A_0.float_out:setup_interpolator_0.Left_in
stream_connect = fetcher_B_0.float_out:setup_interpolator_0.Right_in
stream_connect = fetcher_C_0.float_out:setup_interpolator_1.Left_in
stream_connect = fetcher_D_0.float_out:setup_interpolator_1.Right_in

# *** aie interpolators ***
${SINT_TO_AIE}

# *** mutual_information_master ***
stream_connect = setup_mi_0.pixels_out:mutual_information_master_0.stream_input_img

[vivado]
# use following line to improve the hw_emu running speed affected by platform
prop=fileset.sim_1.xsim.elaborate.xelab.more_options={-override_timeprecision -timescale=1ns/1ps}

